<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools">

    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
    <uses-permission android:name="android.permission.BLUETOOTH" />
    <uses-permission android:name="android.permission.BLUETOOTH_ADMIN" />
    <uses-permission android:name="android.permission.BLUETOOTH_ADVERTISE" />
    <uses-permission android:name="android.permission.BLUETOOTH_CONNECT" />
    <uses-permission android:name="android.permission.BLUETOOTH_SCAN" />
    <uses-permission android:name="android.permission.POST_NOTIFICATIONS" tools:node="remove"/>
    <uses-permission android:name="android.permission.INTERNET" />

    <application
        android:allowBackup="true"
        android:dataExtractionRules="@xml/data_extraction_rules"
        android:fullBackupContent="@xml/backup_rules"
        android:icon="@drawable/launcher_corgi"
        android:label="@string/app_name"
        android:roundIcon="@drawable/launcher_corgi"
        android:supportsRtl="true"
        android:theme="@style/Theme.Material3.Light.NoActionBar"
        tools:targetApi="31"



        android:usesCleartextTraffic="true"
        >
        <activity
            android:name=".LoginActivity"
            android:exported="true">
            <meta-data
                android:name="android.app.lib_name"
                android:value="" />
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <!--
             TODO: Before you run your application, you need a Google Maps API key.

             To get one, follow the directions here:

                https://developers.google.com/maps/documentation/android-sdk/get-api-key

             Once you have your API key (it starts with "AIza"), define a new property in your
             project's local.properties file (e.g. MAPS_API_KEY=Aiza...), and replace the
             "YOUR_API_KEY" string in this file with "${MAPS_API_KEY}".
        -->
        <meta-data
            android:name="com.google.android.geo.API_KEY"
            android:value="@string/API_KEY" />

        <!--<activity
            android:name=".MapsActivity"
            android:exported="true"
            android:label="@string/title_activity_maps">
        </activity>-->

        <activity
            android:name=".MapActivity"
            android:exported="true"
            android:label="@string/title_activity_maps">
        </activity>

        <service
            android:name="com.karl.pfind.bluno.BluetoothLeService"
            android:enabled="true"/>

        <service
            android:name="com.karl.pfind.bluno.BluetoothLeActivityService"
            android:enabled="true"/>

        <service
            android:name="com.karl.pfind.Services.MyFirebaseMessagingService"
            android:exported="false">
            <intent-filter>
                <action android:name="com.google.firebase.MESSAGING_EVENT" />
            </intent-filter>
        </service>

        <service
        android:name="com.karl.pfind.Services.MissingDeviceConnectorService"
        android:exported="false" >
            <intent-filter>
                <action android:name="com.google.firebase.MESSAGING_EVENT" />
                <action android:name="ACTION_GATT_CONNECTED" />
                <action android:name="ACTION_GATT_DISCONNECTED" />
                <action android:name="ACTION_GATT_SERVICES_DISCOVERED" />
                <action android:name="ACTION_DATA_AVAILABLE" />
            </intent-filter>
        </service>

        <service
            android:name="com.karl.pfind.bluno.TestBleService"
            android:exported="false" >
            <intent-filter>
                <action android:name="com.google.firebase.MESSAGING_EVENT" />
            </intent-filter>
        </service>

        <!-- Set custom default icon. This is used when no icon is set for incoming notification messages.
         See README(https://goo.gl/l4GJaQ) for more. -->
        <meta-data
            android:name="com.google.firebase.messaging.default_notification_icon"
            android:resource="@drawable/launcher_corgi" />
        <!-- Set color used with incoming notification messages. This is used when no color is set for the incoming
             notification message. See README(https://goo.gl/6BKBk7) for more. -->
        <meta-data
            android:name="com.google.firebase.messaging.default_notification_color"
            android:resource="@color/baby_blue" />


    </application>

</manifest>